# From peepcode
# Command Enhancements

# Utility
alias reload='source ~/.zshrc'
alias ea='mate -w ~/.dotfiles/zsh/aliases && reload' # Edit aliases

# Quicker cd
# Common -- Some are from Damian Conway
alias a='ls -A' # -A all except literal . ..
alias la="ls -A -l -G"
alias c='clear'
alias cdd='cd -'  # goto last dir cd'ed from
alias cl='clear; l'
function cdc() { 
    cd $1; ls 
}
alias cls='clear; ls'
alias h='history'
alias l.='ls -d .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
                    # -G color
alias lh="ls -lh"
alias ll='ls -lhG'  # -l long listing, human readable, no group info
alias lt='ls -lt' # sort with recently modified first
alias md='mkdir -p'

function take() { 
    mkdir -p "$1"
    cd "$1" 
}

alias q='exit'
alias k9="kill -9"
function killnamed () { 
    ps ax | grep $1 | cut -d ' ' -f 2 | xargs kill 
}

# Finder
alias o='open . &'
alias ff='open -a Firefox'

# General code

# From Chris Wanstrath
function pless() { 
    pygmentize $1 | less -r 
}

# Processes
alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory

# Git
alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb='git branch'
alias gba='git branch -a'
# Commit pending changes and quote all args as message
function gc() { 
    echo 'Commit Message: '
    read MESSAGE
    git commit -m $MESSAGE
}
alias gco='git checkout'
alias gd='git diff'
alias gdm='git diff master'
alias gl='git pull'
alias gnp="git-notpushed"
alias gp='git push'
alias gst='git status'
alias gt='git status'
alias g='git status'
alias eg='mate .git/config'
# Git clone from GitHub
function gch() {
  git clone git://github.com/$USER/$1.git
}

# Setup a tracking branch from [remote] [branch_name]
function gbt() { 
  git branch --track $2 $1/$2 && git checkout $2 
}
# Quickly clobber a file and checkout
function grf() { 
  rm $1
  git checkout $1 
}
# Call from inside an initialized Git repo, with the name of the repo.
function new-git() {
  ssh git@example.com "mkdir $1.git && cd $1.git && git --bare init"
  git remote add origin git@example.com:$1.git
  git push origin master
  git config branch.master.remote origin
  git config branch.master.merge refs/heads/master
  git config push.default current
}

# Text editing
# Emacs
alias em="open -a Emacs"
alias emm="open -a Emacs ."
# Regenerate TAGS file from file arguments
function ct() {
  rm -f TAGS
  etags --append --output=TAGS $*
}

# TextMate
alias et="mate"
alias ett="mate ."
alias etr="mate app config lib db schema public spec test vendor/gems vendor/plugins Rakefile Capfile Vladfile Todofile README stories merb slices tasks features &"

# Ruby
alias r="rake"

function markdown() { 
/Applications/TextMate.app/Contents/SharedSupport/Support/bin/Markdown.pl $1 > $1.html 
}

# Rails
alias mr='mongrel_rails start'
alias ms='mongrel_rails stop'
alias rp='touch tmp/restart.txt'
alias sc='./script/console'
alias sg='./script/generate'
alias sp='./script/plugin'
alias ss='./script/server'
alias tl='tail -f log/*.log'
alias ts='thin start'

# TDD / BDD

# Syntax check Javascript
function jsc() { 
  jsl -conf /etc/jsl/jsl.conf -process $1 
}

# From http://github.com/suztomo/dotfiles
function rmf(){
    for file in $*
    do
        __rm_single_file $file
    done
}

function __rm_single_file(){
    if ! [ -d ~/.Trash/ ]
    then
        command /bin/mkdir ~/.Trash
    fi

    if ! [ $# -eq 1 ]
    then
        echo "__rm_single_file: 1 argument required but $# passed."
        exit
    fi

    if [ -e $1 ]
    then
        BASENAME=`basename $1`
        NAME=$BASENAME
        COUNT=0
        while [ -e ~/.Trash/$NAME ]
        do
            COUNT=$(($COUNT+1))
            NAME="$BASENAME.$COUNT"
        done

        command /bin/mv $1 ~/.Trash/$NAME
    else
        echo "No such file or directory: $file"
    fi
}

# git
alias gl="git log --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
alias gp='git push'
alias gd='git diff'
alias gca='git commit -a'
alias gco='git checkout'
alias gb='git branch'
alias gs='git status'
alias grm="git status | grep deleted | awk '{print \$3}' | xargs git rm"

# rails
alias sc='script/console'
alias ss='script/server'
alias sg='script/generate'
alias a='autotest'
alias tlog='tail -f log/development.log'
alias scaffold='script/generate nifty_scaffold'
alias migrate='rake db:migrate db:test:clone'
alias rst='touch tmp/restart.txt'

# heroku
alias hrk='heroku'
alias hp='git push heroku master'
alias hl='heroku logs'
alias ho='heroku open'
alias hi='heroku info'
alias hc='heroku console'
alias hps='heroku ps'

alias tailf='tail -f'

alias webshare='python -c "import SimpleHTTPServer;SimpleHTTPServer.test()"'

function zsh_stats() {
  history | awk '{print $2}' | sort | uniq -c | sort -rn | head
}

function tab() {
  osascript 2>/dev/null <<EOF
    tell application "System Events"
      tell process "Terminal" to keystroke "t" using command down
    end
    tell application "Terminal"
      activate
      do script with command "cd \"$PWD\"; clear; $*" in window 1
    end tell
EOF
}

alias emacs='aquamacs'

alias m='mutt'

alias words='wc -w'

function wp() {
  open "http://en.wikipedia.org/w/index.php?search=$*" 
}

alias pomo='nocorrect pomo'

alias mp='muttprofile profile.personal'
alias mw='muttprofile profile.work'

alias rcd='cd .. && cdd'